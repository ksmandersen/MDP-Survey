/**
 * generated by Xtext
 */
package smdp.project.survey.generator;

import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.InputOutput;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;
import smdp.project.survey.validation.SurveyDSLValidator;
import survey.Answer;
import survey.MultipleChoice;
import survey.OpenAnswer;
import survey.Question;
import survey.RadioChoice;
import survey.Survey;

/**
 * Generates code from your model files on save.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#TutorialCodeGeneration
 */
@SuppressWarnings("all")
public class HTMLGenerator implements IGenerator {
  public static CharSequence generateHTMLActivity(final Survey it) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<html>");
    _builder.newLine();
    _builder.append("<head>");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("<title> Survey </title> ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("<style>");
    _builder.newLine();
    _builder.append(" \t");
    _builder.append("p { color:#ffd835 ; font:14pt Helvetica }");
    _builder.newLine();
    _builder.append(" \t");
    _builder.append("p:first-line { color: green; font-size: 200% }");
    _builder.newLine();
    _builder.append(" \t");
    _builder.append("body { background:white }");
    _builder.newLine();
    _builder.append(" \t");
    _builder.append("Div\t{");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("background\t:   #EBEFF3;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("padding\t\t:\t0.5%;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("font-family\t:   Times, Verdana;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("border\t\t:\t1px solid #EBEFF3;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("Div.titleDiv\t{");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("background\t:   #7EA8CA;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("padding\t\t:\t2%;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("font-family\t:   Times, Verdana;");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("text-shadow :   3px 3px 4px rgba(0, 0, 0, 0.2); ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("table, th\t\t{\t\tborder:1px solid black;\t\twidth:\t100%;\t}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("th\t\t\t{\t\tbackground:\t#7EA8CA;\t\ttext-align:\tLeft;\ttext-shadow: 0px 0px 1px rgba(0, 0, 0, 0.15); }");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("td\t\t\t{\t\tbackground: \tWhite;\t\t}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("td:hover\t\t{\t\tbackground: \tWhiteSmoke;\t}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("input[type=radio]:checked {\tborder: 1px solid black;\t}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("div:hover{\tborder:1px solid LightGray; }");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("textarea\t{ resize: none; width:\t100%;  }");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("text\t\t{ resize: none; width:\t70%;  }");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append(".red_caps {color:red; font-style:small-caps; font:14pt Courier;}");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("</style>");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("<script>");
    _builder.newLine();
    _builder.append("function checkValue(form)");
    _builder.newLine();
    _builder.append("{");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("ready = true;");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("// ");
    int questionsNo = 1;
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("// ");
    int answersNo = 1;
    _builder.newLineIfNotEmpty();
    {
      EList<Question> _questions = it.getQuestions();
      for(final Question mq : _questions) {
        _builder.append("\t");
        _builder.newLine();
        {
          if ((mq instanceof MultipleChoice)) {
            {
              boolean _isIsOptional = mq.isIsOptional();
              if (_isIsOptional) {
                _builder.append("\t");
                _builder.append("/* ");
                EList<Answer> _answers = ((MultipleChoice) mq).getAnswers();
                int _length = ((Object[])Conversions.unwrapArray(_answers, Object.class)).length;
                int _plus = (answersNo + _length);
                int _answersNo = answersNo = _plus;
                _builder.append(_answersNo, "	");
                _builder.append(" */");
                _builder.newLineIfNotEmpty();
              } else {
                _builder.append("\t");
                _builder.append("if(ready && !(");
                _builder.newLine();
                {
                  EList<Answer> _answers_1 = ((MultipleChoice) mq).getAnswers();
                  for(final Answer ans : _answers_1) {
                    {
                      if ((ans instanceof OpenAnswer)) {
                        _builder.append("\t");
                        _builder.append("/* ");
                        int _plus_1 = (answersNo + 1);
                        int _answersNo_1 = answersNo = _plus_1;
                        _builder.append(_answersNo_1, "	");
                        _builder.append(" */");
                        _builder.newLineIfNotEmpty();
                      } else {
                        _builder.append("\t");
                        _builder.append("form[");
                        _builder.newLine();
                        _builder.append("\t");
                        _builder.append(answersNo, "	");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("/* ");
                        int _plus_2 = (answersNo + 1);
                        int _answersNo_2 = answersNo = _plus_2;
                        _builder.append(_answersNo_2, "	");
                        _builder.append(" */");
                        _builder.newLineIfNotEmpty();
                        _builder.append("\t");
                        _builder.append("].checked ||");
                        _builder.newLine();
                      }
                    }
                    _builder.append("\t");
                    _builder.append("// ");
                    int _plus_3 = (answersNo + 1);
                    int _answersNo_3 = answersNo = _plus_3;
                    _builder.append(_answersNo_3, "	");
                    _builder.newLineIfNotEmpty();
                  }
                }
                _builder.append("\t");
                _builder.append("true)  { alert(\'Please provide an answer for question");
                _builder.newLine();
                _builder.append("\t");
                _builder.append(questionsNo, "	");
                _builder.newLineIfNotEmpty();
                _builder.append("\t");
                _builder.append("\'); ready=false; }");
                _builder.newLine();
              }
            }
            _builder.append("\t\t");
            _builder.newLine();
          } else {
            if ((mq instanceof RadioChoice)) {
              {
                boolean _isIsOptional_1 = mq.isIsOptional();
                if (_isIsOptional_1) {
                  _builder.append("\t");
                  _builder.append("/* ");
                  EList<Answer> _answers_2 = ((MultipleChoice) mq).getAnswers();
                  int _length_1 = ((Object[])Conversions.unwrapArray(_answers_2, Object.class)).length;
                  int _plus_4 = (answersNo + _length_1);
                  int _answersNo_4 = answersNo = _plus_4;
                  _builder.append(_answersNo_4, "	");
                  _builder.append(" */");
                  _builder.newLineIfNotEmpty();
                } else {
                  _builder.append("\t");
                  _builder.append("if(ready && !(");
                  _builder.newLine();
                  {
                    EList<Answer> _answers_3 = ((RadioChoice) mq).getAnswers();
                    for(final Answer ans_1 : _answers_3) {
                      {
                        if ((ans_1 instanceof OpenAnswer)) {
                          _builder.append("\t");
                          _builder.append("/* ");
                          int _plus_5 = (answersNo + 1);
                          int _answersNo_5 = answersNo = _plus_5;
                          _builder.append(_answersNo_5, "	");
                          _builder.append(" */");
                          _builder.newLineIfNotEmpty();
                        } else {
                          _builder.append("\t");
                          _builder.append("form[");
                          _builder.newLine();
                          _builder.append("\t");
                          _builder.append(answersNo, "	");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("/* ");
                          int _plus_6 = (answersNo + 1);
                          int _answersNo_6 = answersNo = _plus_6;
                          _builder.append(_answersNo_6, "	");
                          _builder.append(" */");
                          _builder.newLineIfNotEmpty();
                          _builder.append("\t");
                          _builder.append("].checked ||");
                          _builder.newLine();
                        }
                      }
                      _builder.append("\t");
                      _builder.append("// ");
                      int _plus_7 = (answersNo + 1);
                      int _answersNo_7 = answersNo = _plus_7;
                      _builder.append(_answersNo_7, "	");
                      _builder.newLineIfNotEmpty();
                    }
                  }
                  _builder.append("\t");
                  _builder.append("true)  { alert(\'Please provide an answer for question");
                  _builder.newLine();
                  _builder.append("\t");
                  _builder.append(questionsNo, "	");
                  _builder.newLineIfNotEmpty();
                  _builder.append("\t");
                  _builder.append("\'); ready=false; }");
                  _builder.newLine();
                }
              }
              _builder.append("\t\t");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("<tr> <td>");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("<textarea name=\"q");
              _builder.append(questionsNo, "	");
              _builder.append("\" id=\"q");
              _builder.append(questionsNo, "	");
              _builder.append("_1\" rows=4>Please enter your answer here... </textarea> </td> </tr>\t");
              _builder.newLineIfNotEmpty();
              _builder.append("\t");
              _builder.append("// ");
              int _plus_8 = (answersNo + 1);
              int _answersNo_8 = answersNo = _plus_8;
              _builder.append(_answersNo_8, "	");
              _builder.append("\t\t");
              _builder.newLineIfNotEmpty();
            }
          }
        }
        _builder.append("\t");
        _builder.append("<!-- ");
        int _plus_9 = (questionsNo + 1);
        int _questionsNo = questionsNo = _plus_9;
        _builder.append(_questionsNo, "	");
        _builder.append(" -->");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("if(!ready)");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("return false;");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("accept = confirm(\'Are you sure you want to proceed?\');");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("return accept;");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("</script>");
    _builder.newLine();
    _builder.append("</head>");
    _builder.newLine();
    _builder.append("<body>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<form name=\"input_form\" action=\"MAILTO:group8survey@example.dk?Subject=SMDP%20Group%208%20survey%20answer\"  onsubmit=\"return checkValue(this) method=\"post\" enctype=\"text/plain\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<div class=\"titleDiv\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<h1> Survey </h1> ");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<br>");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<!-- ");
    int questionNo = 1;
    _builder.append(" -->");
    _builder.newLineIfNotEmpty();
    {
      EList<Question> _questions_1 = it.getQuestions();
      for(final Question mq_1 : _questions_1) {
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("<div> <table> <tr><th>Question #");
        _builder.append(questionNo, "	");
        _builder.append(": <br>");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        {
          boolean _isIsOptional_2 = mq_1.isIsOptional();
          if (_isIsOptional_2) {
            _builder.append("(optional)");
            _builder.newLineIfNotEmpty();
            _builder.append("\t");
          } else {
            _builder.append("(mandatory)");
          }
        }
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        String _description = mq_1.getDescription();
        _builder.append(_description, "	");
        _builder.append("</th></tr>\t\t");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.append("\t\t\t\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.newLine();
        {
          if ((mq_1 instanceof MultipleChoice)) {
            {
              EList<Answer> _answers_4 = ((MultipleChoice) mq_1).getAnswers();
              for(final Answer ans_2 : _answers_4) {
                _builder.append("\t");
                _builder.append("\t");
                int answerNo = 1;
                _builder.newLineIfNotEmpty();
                {
                  if ((ans_2 instanceof OpenAnswer)) {
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("<tr> <td>");
                    _builder.newLine();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("<textarea name=\"q");
                    _builder.append(questionNo, "		");
                    _builder.append("\" id=\"q");
                    _builder.append(questionNo, "		");
                    _builder.append("_1\" rows=4>");
                    String _description_1 = ans_2.getDescription();
                    _builder.append(_description_1, "		");
                    _builder.append("</textarea> </td> </tr>\t");
                    _builder.newLineIfNotEmpty();
                  } else {
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("<tr> <td><input name=\"q");
                    _builder.append(questionNo, "		");
                    _builder.append("\" id=\"q");
                    _builder.append(questionNo, "		");
                    _builder.append("_");
                    _builder.append(answerNo, "		");
                    _builder.append("\" type=\"checkbox\" value=\"op");
                    _builder.append(questionNo, "		");
                    _builder.append("\"> <label for=\"q");
                    _builder.append(questionNo, "		");
                    _builder.append("_");
                    _builder.append(answerNo, "		");
                    _builder.append("\"> ");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("\t");
                    String _description_2 = ans_2.getDescription();
                    _builder.append(_description_2, "		");
                    _builder.append(" ");
                    _builder.newLineIfNotEmpty();
                    _builder.append("\t");
                    _builder.append("\t");
                    _builder.append("</label> </td> </tr>");
                    _builder.newLine();
                  }
                }
                _builder.append("\t");
                _builder.append("\t");
                int _plus_10 = (answerNo + 1);
                int _answerNo = answerNo = _plus_10;
                _builder.append(_answerNo, "		");
                _builder.newLineIfNotEmpty();
              }
            }
            _builder.append("\t\t\t");
            _builder.newLine();
          } else {
            if ((mq_1 instanceof RadioChoice)) {
              {
                EList<Answer> _answers_5 = ((RadioChoice) mq_1).getAnswers();
                for(final Answer ans_3 : _answers_5) {
                  _builder.append("\t");
                  _builder.append("\t");
                  int answerNo_1 = 1;
                  _builder.newLineIfNotEmpty();
                  {
                    if ((ans_3 instanceof OpenAnswer)) {
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("<tr> <td>");
                      _builder.newLine();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("<textarea name=\"q");
                      _builder.append(questionNo, "		");
                      _builder.append("\" id=\"q");
                      _builder.append(questionNo, "		");
                      _builder.append("_1\" rows=4>");
                      String _description_3 = ans_3.getDescription();
                      _builder.append(_description_3, "		");
                      _builder.append("</textarea> </td> </tr>\t");
                      _builder.newLineIfNotEmpty();
                    } else {
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("<tr> <td><input name=\"q");
                      _builder.append(questionNo, "		");
                      _builder.append("\" id=\"q");
                      _builder.append(questionNo, "		");
                      _builder.append("_");
                      _builder.append(answerNo_1, "		");
                      _builder.append("\" type=\"radio\" value=\"op");
                      _builder.append(questionNo, "		");
                      _builder.append("\"> <label for=\"q");
                      _builder.append(questionNo, "		");
                      _builder.append("_");
                      _builder.append(answerNo_1, "		");
                      _builder.append("\"> ");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      String _description_4 = ans_3.getDescription();
                      _builder.append(_description_4, "		");
                      _builder.append(" ");
                      _builder.newLineIfNotEmpty();
                      _builder.append("\t");
                      _builder.append("\t");
                      _builder.append("</label> </td> </tr>");
                      _builder.newLine();
                    }
                  }
                  _builder.append("\t");
                  _builder.append("\t");
                  _builder.append("<!-- ");
                  int _plus_11 = (answerNo_1 + 1);
                  int _answerNo_1 = answerNo_1 = _plus_11;
                  _builder.append(_answerNo_1, "		");
                  _builder.append(" -->");
                  _builder.newLineIfNotEmpty();
                }
              }
              _builder.append("\t\t\t");
              _builder.newLine();
            } else {
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("<tr> <td>");
              _builder.newLine();
              _builder.append("\t");
              _builder.append("\t");
              _builder.append("<textarea name=\"q");
              _builder.append(questionNo, "		");
              _builder.append("\" id=\"q");
              _builder.append(questionNo, "		");
              _builder.append("_1\" rows=4>Please enter your answer here... </textarea> </td> </tr>\t\t\t");
              _builder.newLineIfNotEmpty();
            }
          }
        }
        _builder.append("\t");
        _builder.append("<!-- ");
        int _plus_12 = (questionNo + 1);
        int _questionNo = questionNo = _plus_12;
        _builder.append(_questionNo, "	");
        _builder.append(" -->");
        _builder.newLineIfNotEmpty();
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.newLine();
        _builder.append("\t");
        _builder.append(" ");
        _builder.append("</table></div><br>");
        _builder.newLine();
        _builder.append("\t");
        _builder.newLine();
      }
    }
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    _builder.append("\t\t ");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("<div class=\"titleDiv\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<h3> Thank you! </h3> ");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<input type=\"submit\" value=\"Submit\">");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<input type=\"reset\" value=\"Reset\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("</form>");
    _builder.newLine();
    _builder.append("</body>");
    _builder.newLine();
    _builder.append("</html>");
    _builder.newLine();
    return _builder;
  }
  
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    TreeIterator<EObject> _allProperContents = EcoreUtil.<EObject>getAllProperContents(resource, false);
    final Function1<EObject,Boolean> _function = new Function1<EObject,Boolean>() {
      public Boolean apply(final EObject it) {
        boolean _constraint = SurveyDSLValidator.constraint(it);
        return Boolean.valueOf(_constraint);
      }
    };
    boolean _forall = IteratorExtensions.<EObject>forall(_allProperContents, _function);
    if (_forall) {
      TreeIterator<EObject> _allContents = resource.getAllContents();
      Iterable<EObject> _iterable = IteratorExtensions.<EObject>toIterable(_allContents);
      Iterable<Survey> _filter = Iterables.<Survey>filter(_iterable, Survey.class);
      final Procedure1<Survey> _function_1 = new Procedure1<Survey>() {
        public void apply(final Survey it) {
          final String fname = "MainActivity";
          String _plus = ("app-gen/src/" + fname);
          String _plus_1 = (_plus + ".html");
          CharSequence _generateHTMLActivity = HTMLGenerator.generateHTMLActivity(it);
          fsa.generateFile(_plus_1, _generateHTMLActivity);
        }
      };
      IterableExtensions.<Survey>forEach(_filter, _function_1);
    } else {
      InputOutput.<String>println("Constraints violated. Either a question contains a reference to its own answer or a description string is empty.");
    }
  }
}
